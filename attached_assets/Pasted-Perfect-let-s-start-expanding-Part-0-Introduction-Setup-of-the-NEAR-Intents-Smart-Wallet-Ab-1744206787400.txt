Perfect—let’s start expanding **Part 0: Introduction & Setup** of the NEAR Intents & Smart Wallet Abstraction workshop.

---

## **Workshop: Building with NEAR Intents & Smart Wallet Abstraction**
### **Part 0: Introduction & Setup**

---

### **0.1 Welcome & Workshop Objectives**

**Time**: 5 minutes  
**Format**: Presentation + Q&A  

**Objective**:  
Set context and expectations for what participants will learn and build.

**Slide Content / Talking Points**:
- What are NEAR Intents and why they matter in chain abstraction.
- Smart Wallets: Moving away from seed phrases and improving UX.
- Goal: Build a minimal working demo that lets users express intents and execute them via a smart wallet, on NEAR testnet.
- Bonus: Extend to cross-chain or custom Solvers for advanced use cases.

---

### **0.2 Overview of NEAR Intents & Smart Wallet Abstraction**

**Time**: 10 minutes  
**Format**: Live walkthrough with diagrams

**Key Concepts**:
- **Intent**: A declarative goal (e.g., “I want to swap USDC for wNEAR”) without specifying *how* it’s done.
- **Solver**: Competes to fulfill an intent optimally (e.g., best route, best price).
- **Verifier**: Validates that the Solver’s proposed fulfillment meets the intent’s constraints.
- **Smart Wallet**: Abstracts signing, batching, and multi-chain logic for the user.

**Helpful Visuals**:
- Flow diagram: User → Intent → Verifier → Solver → Fulfillment
- Actor overview: dApp, User, Verifier, Solver, Relayer

---

### **0.3 Prerequisites & Environment Setup**

**Time**: 15 minutes  
**Format**: Hands-on setup

#### **Install Node.js & npm**
```bash
nvm install --lts
nvm use --lts
```

#### **Install NEAR CLI**
```bash
npm install -g near-cli
```

#### **Install Rust toolchain (if using Rust contracts)**
```bash
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup target add wasm32-unknown-unknown
```

#### **Install Git & clone workshop repo**
```bash
git clone https://github.com/near-examples/near-intents-example.git
cd near-intents-example
npm install
```

#### **Create NEAR Testnet Account**
Go to: [https://wallet.testnet.near.org](https://wallet.testnet.near.org)  
- Create a testnet account like `yourname.testnet`
- Save recovery phrase or key file

#### **Configure CLI**
```bash
near login
```

This opens a browser. Log in with your testnet account.

---

### **0.4 Repo Walkthrough & Folder Structure**

**Time**: 10 minutes  
**Format**: Code walkthrough

```plaintext
/workshop-root
  /contracts         # Contains Verifier and Solver smart contracts
  /frontend          # React/Next UI for expressing and fulfilling intents
  /wallet            # Smart wallet abstraction logic
  /scripts           # Deployment and simulation scripts
  near.config.js     # Testnet config
```

**Highlight**:
- Focus today will be `/contracts` and `/frontend`
- We’ll run simulations using `/scripts` and test UX using the smart wallet interface

---

### **What’s Next**
Next section will cover **Part 1: Deep Dive into Intents and Abstraction**, including writing your first intent and understanding the roles of Verifier and Solver.

Would you like to move into **Part 1** next, or should I include a workshop checklist PDF / Notion template to help track progress?